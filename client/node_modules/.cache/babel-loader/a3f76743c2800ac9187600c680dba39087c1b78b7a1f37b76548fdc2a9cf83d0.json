{"ast":null,"code":"var _jsxFileName = \"/Users/noahrizika/Documents/PersonalCodes/middlebury-climbing/src/pages/Announcements.js\";\nimport React from \"react\";\nimport pkg from 'pg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Client\n} = pkg;\nconst client = new Client({\n  host: 'localhost',\n  port: 5432,\n  database: 'dvdrental',\n  user: 'postgres',\n  password: 'PASSWORD' // type password here\n});\nasync function searchMovies() {\n  console.log(`You wanna search for ${title}?`);\n  console.log(`...yeah this part is a work in progess`);\n  await sleep();\n  mainOptions();\n}\n;\nasync function createDatabase(table_name) {\n  await client.query('DROP TABLE IF EXISTS ${table_name};');\n  await client.query(`\n        CREATE TABLE ${table_name}(\n        movie_id SERIAL PRIMARY KEY,\n        title VARCHAR (50) NOT NULL,\n        actors VARCHAR (50) NOT NULL,\n        directors VARCHAR (50) NOT NULL,\n        release_date DATE NOT NULL,\n      );`);\n}\nconst Announcements = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"main-text\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Announcements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_c = Announcements;\nexport default Announcements;\nvar _c;\n$RefreshReg$(_c, \"Announcements\");","map":{"version":3,"names":["React","pkg","jsxDEV","_jsxDEV","Client","client","host","port","database","user","password","searchMovies","console","log","title","sleep","mainOptions","createDatabase","table_name","query","Announcements","class","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/noahrizika/Documents/PersonalCodes/middlebury-climbing/src/pages/Announcements.js"],"sourcesContent":["import React from \"react\";\nimport pkg from 'pg';\n\nconst { Client } = pkg;\nconst client = new Client({\n  host: 'localhost',\n  port: 5432,\n  database: 'dvdrental',\n  user: 'postgres',\n  password: 'PASSWORD', // type password here\n});\n\nasync function searchMovies() {\n    console.log(`You wanna search for ${title}?`);\n    console.log(`...yeah this part is a work in progess`);\n    await sleep();\n    mainOptions();\n};\n\nasync function createDatabase(table_name)\n{\n    await client.query('DROP TABLE IF EXISTS ${table_name};');\n    await client.query(`\n        CREATE TABLE ${table_name}(\n        movie_id SERIAL PRIMARY KEY,\n        title VARCHAR (50) NOT NULL,\n        actors VARCHAR (50) NOT NULL,\n        directors VARCHAR (50) NOT NULL,\n        release_date DATE NOT NULL,\n      );`);\n}\n\nconst Announcements = () =>\n{\n    return (\n        <div class=\"main-text\">\n            <h1>Announcements</h1>\n        </div>\n    );\n}\n\nexport default Announcements;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAM;EAAEC;AAAO,CAAC,GAAGH,GAAG;AACtB,MAAMI,MAAM,GAAG,IAAID,MAAM,CAAC;EACxBE,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,IAAI;EACVC,QAAQ,EAAE,WAAW;EACrBC,IAAI,EAAE,UAAU;EAChBC,QAAQ,EAAE,UAAU,CAAE;AACxB,CAAC,CAAC;AAEF,eAAeC,YAAYA,CAAA,EAAG;EAC1BC,OAAO,CAACC,GAAG,CAAE,wBAAuBC,KAAM,GAAE,CAAC;EAC7CF,OAAO,CAACC,GAAG,CAAE,wCAAuC,CAAC;EACrD,MAAME,KAAK,CAAC,CAAC;EACbC,WAAW,CAAC,CAAC;AACjB;AAAC;AAED,eAAeC,cAAcA,CAACC,UAAU,EACxC;EACI,MAAMb,MAAM,CAACc,KAAK,CAAC,qCAAqC,CAAC;EACzD,MAAMd,MAAM,CAACc,KAAK,CAAE;AACxB,uBAAuBD,UAAW;AAClC;AACA;AACA;AACA;AACA;AACA,SAAS,CAAC;AACV;AAEA,MAAME,aAAa,GAAGA,CAAA,KACtB;EACI,oBACIjB,OAAA;IAAKkB,KAAK,EAAC,WAAW;IAAAC,QAAA,eAClBnB,OAAA;MAAAmB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEd,CAAC;AAAAC,EAAA,GAPKP,aAAa;AASnB,eAAeA,aAAa;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}