{"ast":null,"code":"import React,{useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Announcement_Data=_ref=>{let{baseURL}=_ref;const[username,setUsername]=useState('');const[announcements,setAnnouncements]=useState('');useEffect(()=>{const fetchData=async()=>{try{const res=await fetch(\"\".concat(baseURL,\"/info\"),{method:'GET'});const data=await res.json();if(data.info&&data.info.length>0){setUsername(data.info[0].username);let announcementsText='';//   for (let i = 0; i < data.info.length; i++) {\n//     announcementsText += data.info[i].username + ' // ';\n//   }\nsetAnnouncements(announcementsText);console.log(announcementsText);console.log('annoucnements above and below');console.log(announcements);}}catch(error){console.error('Error fetching data:',error);}};fetchData();},[baseURL]);// Dependency array to ensure useEffect runs only once or when baseURL changes\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:username}),/*#__PURE__*/_jsx(\"div\",{children:announcements})]});};export default Announcement_Data;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","Announcement_Data","_ref","baseURL","username","setUsername","announcements","setAnnouncements","fetchData","res","fetch","concat","method","data","json","info","length","announcementsText","console","log","error","children"],"sources":["/Users/noahrizika/Documents/PersonalCodes/middlebury-climbing/client/src/components/Announcement_Data.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Announcement_Data = ({ baseURL }) => {\n  const [username, setUsername] = useState('');\n  const [announcements, setAnnouncements] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(`${baseURL}/info`, {\n          method: 'GET',\n        });\n        const data = await res.json();\n        \n        if (data.info && data.info.length > 0) {\n          setUsername(data.info[0].username);\n          \n          let announcementsText = '';\n        //   for (let i = 0; i < data.info.length; i++) {\n        //     announcementsText += data.info[i].username + ' // ';\n        //   }\n          setAnnouncements(announcementsText);\n          console.log(announcementsText);\n          console.log('annoucnements above and below');\n          console.log(announcements);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, [baseURL]); // Dependency array to ensure useEffect runs only once or when baseURL changes\n\n  return (\n    <div>\n        <div>{username}</div>\n      <div>{announcements}</div>\n    </div>\n  );\n};\n\nexport default Announcement_Data;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,iBAAiB,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CACpC,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACU,aAAa,CAAEC,gBAAgB,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAEtDD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIR,OAAO,UAAS,CACzCS,MAAM,CAAE,KACV,CAAC,CAAC,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,GAAG,CAACK,IAAI,CAAC,CAAC,CAE7B,GAAID,IAAI,CAACE,IAAI,EAAIF,IAAI,CAACE,IAAI,CAACC,MAAM,CAAG,CAAC,CAAE,CACrCX,WAAW,CAACQ,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC,CAACX,QAAQ,CAAC,CAElC,GAAI,CAAAa,iBAAiB,CAAG,EAAE,CAC5B;AACA;AACA;AACEV,gBAAgB,CAACU,iBAAiB,CAAC,CACnCC,OAAO,CAACC,GAAG,CAACF,iBAAiB,CAAC,CAC9BC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAC5CD,OAAO,CAACC,GAAG,CAACb,aAAa,CAAC,CAC5B,CACF,CAAE,MAAOc,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACF,CAAC,CAEDZ,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACL,OAAO,CAAC,CAAC,CAAE;AAEf,mBACEH,KAAA,QAAAqB,QAAA,eACIvB,IAAA,QAAAuB,QAAA,CAAMjB,QAAQ,CAAM,CAAC,cACvBN,IAAA,QAAAuB,QAAA,CAAMf,aAAa,CAAM,CAAC,EACvB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}